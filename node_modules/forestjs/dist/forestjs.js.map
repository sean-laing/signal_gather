{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 471e89b3f1d25620ea60","webpack:///./src/index.js","webpack:///./src/DecisionTree.js","webpack:///./src/RandomForest.js","webpack:///./~/crowdprocess/index.js","webpack:///external \"util\"","webpack:///external \"stream\"","webpack:///./~/crowdprocess/~/crp-job-client/index.js","webpack:///./~/crowdprocess/~/crp-job-client/~/hyperquest/index.js","webpack:///external \"url\"","webpack:///external \"http\"","webpack:///external \"https\"","webpack:///./~/crowdprocess/~/crp-job-client/~/hyperquest/~/through/index.js","webpack:///./~/crowdprocess/~/crp-job-client/~/hyperquest/~/duplexer/index.js","webpack:///./~/crowdprocess/~/crp-job-client/~/stream2buffer/index.js","webpack:///./~/crowdprocess/~/crp-job-client/lib/extend.js","webpack:///./~/crowdprocess/~/crp-job-client/config.js","webpack:///./~/crowdprocess/~/crp-stream-client/index.js","webpack:///./~/crowdprocess/~/crp-stream-client/config.js","webpack:///./~/crowdprocess/~/crp-stream-client/tasks-stream.js","webpack:///./~/crowdprocess/~/crp-stream-client/~/hyperquest/index.js","webpack:///./~/crowdprocess/~/crp-stream-client/~/hyperquest/~/through/index.js","webpack:///./~/crowdprocess/~/crp-stream-client/~/hyperquest/~/duplexer/index.js","webpack:///external \"querystring\"","webpack:///./~/crowdprocess/~/crp-stream-client/~/newline-json/index.js","webpack:///./~/crowdprocess/~/crp-stream-client/~/newline-json/stringifier.js","webpack:///./~/crowdprocess/~/crp-stream-client/~/newline-json/parser.js","webpack:///external \"string_decoder\"","webpack:///./~/crowdprocess/~/crp-stream-client/results-stream.js","webpack:///./~/crowdprocess/~/crp-stream-client/errors-stream.js","webpack:///./~/crowdprocess/~/readable-stream/readable.js","webpack:///./~/crowdprocess/~/readable-stream/lib/_stream_duplex.js","webpack:///./~/crowdprocess/~/readable-stream/~/core-util-is/lib/util.js","webpack:///./~/crowdprocess/~/readable-stream/~/inherits/inherits.js","webpack:///./~/crowdprocess/~/readable-stream/lib/_stream_readable.js","webpack:///./~/crowdprocess/~/readable-stream/~/isarray/index.js","webpack:///external \"buffer\"","webpack:///external \"events\"","webpack:///./~/crowdprocess/~/readable-stream/~/string_decoder/index.js","webpack:///./~/crowdprocess/~/readable-stream/lib/_stream_writable.js","webpack:///./~/crowdprocess/~/readable-stream/lib/_stream_transform.js","webpack:///./~/crowdprocess/~/readable-stream/lib/_stream_passthrough.js","webpack:///./src/DecisionTree.js?2a2d"],"names":[],"mappings":"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AEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kDAAiD,eAAe;AAChE,gDAA+C,eAAe;AAC9D;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA,wBAAuB,OAAO;AAC9B;AACA,kCAAiC;AACjC;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA,QAAO;;AAEP;AACA;AACA,QAAO;;AAEP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA,UAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;AC/QA,kC;;;;;;ACAA,oC;;;;;;ACAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA4B;;AAE5B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gDAA+C;AAC/C;AACA;AACA;AACA,8CAA6C,KAAK;AAClD,QAAO;AACP,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,QAAO;AACP,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,QAAO;AACP,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;AACL;AACA;;;;;;;AC5KA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAiC,gBAAgB;;AAEjD;AACA;AACA,sCAAqC,cAAc;;AAEnD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gDAA+C,gBAAgB;AAC/D,4CAA2C,iBAAiB;AAC5D;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,uCAAsC,iBAAiB;AACvD;;AAEA;AACA,uCAAsC,gBAAgB;AACtD;;AAEA;AACA,uCAAsC,mBAAmB;AACzD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACvJA,iC;;;;;;ACAA,kC;;;;;;ACAA,mC;;;;;;ACAA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;;AAEA;;AAEA;AACA,qCAAoC;AACpC,6BAA4B;;AAE5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAmB,gBAAgB;AACnC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACtFA;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;AACH;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,O;;;;;;ACRA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,O;;;;;;ACRA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;AC9BA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAiC,gBAAgB;;AAEjD;AACA;AACA,sCAAqC,cAAc;;AAEnD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gDAA+C,gBAAgB;AAC/D,4CAA2C,iBAAiB;AAC5D;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,uCAAsC,iBAAiB;AACvD;;AAEA;AACA,uCAAsC,gBAAgB;AACtD;;AAEA;AACA,uCAAsC,mBAAmB;AACzD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACvJA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;;AAEA;;AAEA;AACA,qCAAoC;AACpC,6BAA4B;;AAE5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAmB,gBAAgB;AACnC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACtFA,yC;;;;;;ACAA;AACA;;;;;;;ACDA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACrBA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACnDA,4C;;;;;;ACAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;;;;;;AC1CA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iCAAgC,OAAO;AACvC;AACA;AACA;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,E;;;;;;AC1GA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,SAAS;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,mCAAkC;AAClC;AACA,SAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uCAAsC,gBAAgB;AACtD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA,iCAAgC,OAAO;AACvC;AACA;AACA;;AAEA;AACA,iCAAgC,OAAO;AACvC;AACA;AACA;AACA;;;;;;;ACt7BA;AACA;AACA;;;;;;;ACFA,oC;;;;;;ACAA,oC;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAQ,OAAO;AACf;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;AC5NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,yBAAyB;AAC5C;;AAEA;AACA;AACA;AACA;AACA,sBAAqB,gBAAgB;AACrC;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,IAAG;AACH;AACA,oBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC5dA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,YAAY;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,Q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","file":"forestjs.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"util\"), require(\"stream\"), require(\"url\"), require(\"http\"), require(\"https\"), require(\"querystring\"), require(\"string_decoder\"), require(\"buffer\"), require(\"events\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"util\", \"stream\", \"url\", \"http\", \"https\", \"querystring\", \"string_decoder\", \"buffer\", \"events\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"forestjs\"] = factory(require(\"util\"), require(\"stream\"), require(\"url\"), require(\"http\"), require(\"https\"), require(\"querystring\"), require(\"string_decoder\"), require(\"buffer\"), require(\"events\"));\n\telse\n\t\troot[\"forestjs\"] = factory(root[\"util\"], root[\"stream\"], root[\"url\"], root[\"http\"], root[\"https\"], root[\"querystring\"], root[\"string_decoder\"], root[\"buffer\"], root[\"events\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_22__, __WEBPACK_EXTERNAL_MODULE_26__, __WEBPACK_EXTERNAL_MODULE_35__, __WEBPACK_EXTERNAL_MODULE_36__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 471e89b3f1d25620ea60\n **/","/**\n * Index\n * =====\n *\n * Export public API\n */\n\nimport DecisionTree from './DecisionTree.js'\nimport RandomForest from './RandomForest.js'\n\n\nexport default {\n  DecisionTree,\n  RandomForest\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","/**\n * DecisionTree\n * ============\n *\n *\n */\n\n/**\n * represents a single decision tree\n */\nexport default class DecisionTree {\n\n\t/**\n\t * [constructor description]\n\t *\n\t * @param  {[type]} serial [description]\n\t * @return {[type]}        [description]\n\t */\n\tconstructor (serial = {}) {\n\t\tif (typeof serial === 'string') {\n\t\t\tserial = JSON.parse(serial)\n\t\t}\n\t\tfor (var key of Object.keys(serial)) {\n\t\t\tthis[key] = serial[key]\n\t\t}\n\t\tif (!this.trainFun) {\n\t\t\tthis.trainFun = (this.weakType === 0) ? decisionStumpTrain : decision2DStumpTrain;\n\t\t}\n\t\tif (!this.testFun) {\n\t\t\tthis.testFun = (this.weakType === 0) ? decisionStumpTest : decision2DStumpTest;\n\t\t}\n\t}\n\n\t/**\n\t * [train description]\n\t *\n\t * @param  {Array}   data    -\n\t * @param  {Array}   labels  -\n\t * @param  {Object]} options -\n\t */\n\ttrain (data, labels, options = {}) {\n\n    var maxDepth = options.maxDepth || 4;\n    var weakType = options.type || 0;\n\n    var trainFun = options.trainFun || decision2DStumpTrain;\n    var testFun = options.testFun || decision2DStumpTest;\n\n    if (weakType == 0) {\n      trainFun = decisionStumpTrain;\n      testFun = decisionStumpTest;\n    }\n    if (weakType == 1) {\n      trainFun = decision2DStumpTrain;\n      testFun = decision2DStumpTest;\n    }\n\n    // initialize various helper variables\n    var numInternals = Math.pow(2, maxDepth) - 1;\n    var numNodes = Math.pow(2, maxDepth + 1) - 1;\n    var ixs = new Array(numNodes); // 31 -> 2^5 -1\n\t\t// console.log(numNodes, maxDepth);\n\t\t// debugger\n    for (var i = 1; i < ixs.length; i++) {\n\t\t\tixs[i] = [];\n\t\t}\n    ixs[0] = new Array(labels.length);\n    for (var i = 0; i < labels.length; i++) {\n\t\t\tixs[0][i] = i; // root node starts out with all nodes as relevant\n\t\t}\n    var models = new Array(numInternals);\n\n    // train\n    for (var n = 0; n < numInternals; n++) {\n\n      // few base cases\n      var ixhere= ixs[n];\n      if (ixhere.length == 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n      if (ixhere.length == 1) {\n\t\t\t\tixs[n*2+1] = [ixhere[0]];\n\t\t\t\tcontinue;\n\t\t\t} // arbitrary send it down left\n\n      // learn a weak model on relevant data for this node\n      var model = trainFun(data, labels, ixhere);\n\n      models[n] = model; // back it up model\n\n      // split the data according to the learned model\n      var ixleft = [];\n      var ixright = [];\n\n\t\t\tfor (var i = 0; i < ixhere.length; i++) {\n        var label = testFun(data[ixhere[i]], model);\n        if (label === 1) {\n\t\t\t\t\tixleft.push(ixhere[i]);\n\t\t\t\t} else {\n\t\t\t\t\tixright.push(ixhere[i]);\n\t\t\t\t}\n      }\n      ixs[n*2+1] = ixleft;\n      ixs[n*2+2] = ixright;\n    }\n\n    // compute data distributions at the leafs\n    var leafPositives = new Array(numNodes);\n    var leafNegatives = new Array(numNodes);\n    for (var n = numInternals; n < numNodes; n++) {\n      var numones = 0;\n      for(var i = 0; i < ixs[n].length; i++) {\n        if (labels[ixs[n][i]] === 1) {\n\t\t\t\t\tnumones+=1;\n\t\t\t\t}\n      }\n      leafPositives[n] = numones;\n      leafNegatives[n] = ixs[n].length - numones;\n    }\n\n    // back up important prediction variables for predicting later\n    this.models = models;\n    this.leafPositives = leafPositives;\n    this.leafNegatives = leafNegatives;\n    this.maxDepth = maxDepth;\n\t\tthis.weakType = weakType;\n    this.trainFun = trainFun;\n    this.testFun = testFun;\n\t}\n\n\t/**\n\t * [predictOne description]\n\t * returns probability that example inst is 1.\n\t *\n\t * @param  {Array}  inst -\n\t * @return {Number}\n\t */\n\tpredictOne (inst) {\n\t\tvar n = 0;\n\t\tfor (var i = 0; i < this.maxDepth;i++) {\n\t\t\tvar dir = this.testFun(inst, this.models[n]);\n\t\t\tif (dir === 1) {\n\t\t\t\tn = n*2+1; // descend left\n\t\t\t} else {\n\t\t\t\tn = n*2+2; // descend right\n\t\t\t}\n\t\t}\n\t\treturn (this.leafPositives[n] + 0.5) / (this.leafNegatives[n] + 1.0); // bayesian smoothing!\n\t}\n}\n\n/**\n * [decisionStumpTrain description]\n * returns model\n *\n * @param  {Array}  data    -\n * @param  {Array}  labels  -\n * @param  {Array}  ix      -\n * @param  {Object} options -\n * @return {Object}\n */\nfunction decisionStumpTrain (data, labels, ix, options = {}) {\n\n  var numtries = options.numTries || 10;\n\n  // choose a dimension at random and pick a best split\n  var ri = randi(0, data[0].length);\n  var N = ix.length;\n\n  // evaluate class entropy of incoming data\n  var H = entropy(labels, ix);\n  var bestGain = 0;\n  var bestThr = 0;\n  for (var i = 0; i < numtries; i++) {\n\n    // pick a random splitting threshold\n    var ix1 = ix[randi(0, N)];\n    var ix2 = ix[randi(0, N)];\n    while (ix2 == ix1) {\n\t\t\tix2 = ix[randi(0, N)]; // enforce distinctness of ix2\n\t\t}\n\n    var a = Math.random();\n    var thr = data[ix1][ri]*a + data[ix2][ri]*(1-a);\n\n    // measure information gain we'd get from split with thr\n    var l1 = 1, r1 = 1, lm1 = 1, rm1 = 1; //counts for Left and label 1, right and label 1, left and minus 1, right and minus 1\n    for (var j = 0; j < ix.length; j++) {\n      if(data[ix[j]][ri] < thr) {\n        if (labels[ix[j]] == 1) {\n\t\t\t\t\tl1++;\n\t\t\t\t} else {\n\t\t\t\t\tlm1++;\n\t\t\t\t}\n      } else {\n        if (labels[ix[j]] == 1) {\n\t\t\t\t\tr1++;\n\t\t\t\t} else {\n\t\t\t\t\trm1++;\n\t\t\t\t}\n      }\n    }\n\n    var t = l1+lm1;  // normalize the counts to obtain probability estimates\n    l1 =l1/t;\n    lm1 =lm1/t;\n    t = r1+rm1;\n    r1 =r1/t;\n    rm1 = rm1/t;\n\n    var LH = -l1*Math.log(l1) -lm1*Math.log(lm1); // left and right entropy\n    var RH = -r1*Math.log(r1) -rm1*Math.log(rm1);\n\n    var informationGain = H - LH - RH;\n    //console.log(\"Considering split %f, entropy %f -> %f, %f. Gain %f\", thr, H, LH, RH, informationGain);\n    if (informationGain > bestGain || i === 0) {\n      bestGain = informationGain;\n      bestThr = thr;\n    }\n  }\n\n  return { // model\n\t\tri,\n\t\tthr: bestThr\n\t};\n}\n\n/**\n * [decisionStumpTest description]\n * returns a decision for a single data instance\n *\n * @param  {Arrat}  inst  -\n * @param  {Object} model -\n * @return {Number}\n */\nfunction decisionStumpTest (inst, model) {\n  if (!model) {\n    // this is a leaf that never received any data...\n    return 1;\n  }\n  return inst[model.ri] < model.thr ? 1 : -1;\n}\n\n/**\n * [decision2DStumpTrain description]\n * returns model. Code duplication with decisionStumpTrain :(\n *\n * @param  {Array} data     -\n * @param  {Array} labels   -\n * @param  {Array} ix       -\n * @param  {Object} options -\n * @return {Object}         - model\n */\nfunction decision2DStumpTrain (data, labels, ix, options = {}) {\n\n  var numtries = options.numTries || 10;\n\n  // choose a dimension at random and pick a best split\n  var N = ix.length;\n\n  var ri1 = 0;\n  var ri2 = 1;\n\n\tif (data[0].length > 2) {\n    // more than 2D data. Pick 2 random dimensions\n    ri1 = randi(0, data[0].length);\n    ri2 = randi(0, data[0].length);\n    while (ri2 == ri1) {\n\t\t\tri2 = randi(0, data[0].length); // must be distinct!\n\t\t}\n  }\n\n  // evaluate class entropy of incoming data\n  var H = entropy(labels, ix);\n  var bestGain = 0;\n  var bestw1, bestw2, bestthr;\n  var dots = new Array(ix.length);\n\n\tfor (var i = 0; i < numtries; i++) {\n\n    // pick random line parameters\n    var alpha = randf(0, 2*Math.PI);\n    var w1 = Math.cos(alpha);\n    var w2 = Math.sin(alpha);\n\n    // project data on this line and get the dot products\n    for (var j = 0; j < ix.length; j++) {\n      dots[j] = w1*data[ix[j]][ri1] + w2*data[ix[j]][ri2];\n    }\n\n    // we are in a tricky situation because data dot product distribution\n    // can be skewed. So we don't want to select just randomly between\n    // min and max. But we also don't want to sort as that is too expensive\n    // let's pick two random points and make the threshold be somewhere between them.\n    // for skewed datasets, the selected points will with relatively high likelihood\n    // be in the high-desnity regions, so the thresholds will make sense\n    var ix1 = ix[randi(0, N)];\n    var ix2 = ix[randi(0, N)];\n    while (ix2 == ix1) {\n\t\t\tix2= ix[randi(0, N)]; // enforce distinctness of ix2\n\t\t}\n    var a = Math.random();\n    var dotthr = dots[ix1]*a + dots[ix2]*(1-a);\n\n    // measure information gain we'd get from split with thr\n    var l1 = 1, r1 = 1, lm1 = 1, rm1 = 1; //counts for Left and label 1, right and label 1, left and minus 1, right and minus 1\n    for (var j = 0; j < ix.length; j++) {\n      if (dots[j] < dotthr) {\n        if (labels[ix[j]] == 1) {\n\t\t\t\t\tl1++;\n\t\t\t\t} else {\n\t\t\t\t\tlm1++;\n\t\t\t\t}\n      } else {\n        if (labels[ix[j]] == 1) {\n\t\t\t\t\tr1++;\n\t\t\t\t} else {\n\t\t\t\t\trm1++;\n\t\t\t\t}\n      }\n    }\n    var t = l1+lm1;\n    l1 = l1/t;\n    lm1 = lm1/t;\n    t = r1+rm1;\n    r1 = r1/t;\n    rm1 = rm1/t;\n\n    var LH = -l1*Math.log(l1) -lm1*Math.log(lm1); // left and right entropy\n    var RH = -r1*Math.log(r1) -rm1*Math.log(rm1);\n\n    var informationGain = H - LH - RH;\n    //console.log(\"Considering split %f, entropy %f -> %f, %f. Gain %f\", thr, H, LH, RH, informationGain);\n    if (informationGain > bestGain || i === 0) {\n      bestGain= informationGain;\n      bestw1= w1;\n      bestw2= w2;\n      bestthr= dotthr;\n    }\n  }\n\n  return { // model\n\t\tw1: bestw1,\n\t\tw2: bestw2,\n\t\tdotthr: bestthr\n\t};\n}\n\n/**\n * [decision2DStumpTest description]\n * returns label for a single data instance\n *\n * @param  {Array}  inst  -\n * @param  {Object} model -\n * @return {Number}\n */\nfunction decision2DStumpTest (inst, model) {\n  if (!model) {\n    // this is a leaf that never received any data...\n    return 1;\n  }\n  return inst[0]*model.w1 + inst[1]*model.w2 < model.dotthr ? 1 : -1;\n}\n\n/**\n * [entropy description]\n * Misc utility functions\n *\n * @param  {String} labels -\n * @param  {Array}  ix     -\n * @return {Number}\n */\nfunction entropy (labels, ix) {\n  var N = ix.length;\n  var p = 0;\n  for (var i = 0; i < N; i++) {\n    if (labels[ix[i]] == 1) {\n\t\t\tp += 1;\n\t\t}\n  }\n  p = (1+p)/(N+2); // let's be bayesian about this\n  var q = (1+N-p)/(N+2);\n  return (-p*Math.log(p) -q*Math.log(q));\n}\n\n/**\n * [randf description]\n * generate random floating point number between a and b\n *\n * @param  {Number} a -\n * @param  {Number} b -\n * @return {Number}\n */\nfunction randf (a, b) {\n  return Math.random()*(b-a)+a;\n}\n\n/**\n * [randi description]\n * generate random integer between a and b (b excluded)\n *\n * @param  {Number} a -\n * @param  {Number} b -\n * @return {Number}\n */\nfunction randi (a, b) {\n  return Math.floor(Math.random()*(b-a)+a);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/DecisionTree.js\n **/","/**\n * RandomForest\n * ============\n *\n *\n */\n\nimport CrowdProcess from 'crowdprocess'\nimport DecisionTree from './DecisionTree'\nimport DecisionTreeRaw from 'raw!./DecisionTree.js'\n\n\n/**\n *\n */\nexport default class RandomForest {\n\n\t/**\n\t * [train description]\n\t *\n\t *\tdata is 2D array of size N x D of examples\n\t *\tlabels is a 1D array of labels (only -1 or 1 for now). In future will support multiclass or maybe even regression\n\t *\toptions.numTrees can be used to customize number of trees to train (default = 100)\n\t *\toptions.maxDepth is the maximum depth of each tree in the forest (default = 4)\n\t *\toptions.numTries is the number of random hypotheses generated at each node during training (default = 10)\n\t *\t\toptions.trainFun is a function with signature \"function myWeakTrain(data, labels, ix, options)\". Here, ix is a list of\n\t *\t\t\t\t\t\t\t\t\t\tindeces into data of the instances that should be payed attention to. Everything not in the list\n \t *  \t\t\t\t\t\t\t\t\tshould be ignored. This is done for efficiency. The function should return a model where you store\n\t *\t\t\t\t\t\t\t\t\t\tvariables. (i.e. model = {}; model.myvar = 5;) This will be passed to testFun.\n\t *\t\toptions.testFun is a function with signature \"funtion myWeakTest(inst, model)\" where inst is 1D array specifying an example,\n\t *\t\t\t\t\t\t\t\t\t\tand model will be the same model that you return in options.trainFun. For example, model.myvar will be 5.\n\t *\t\t\t\t\t\t\t\t\t\tsee decisionStumpTrain() and decisionStumpTest() downstairs for example.\n\t *\n\t * @param  {Array}  data    -\n\t * @param  {Array}  labels  -\n\t * @param  {Object} options -\n\t */\n\ttrain (data, labels, options = {}) {\n\t\tthis.numTrees = options.numTrees || 100;\n\t\t// initialize many trees and train them all independently\n\t\tthis.trees = new Array(this.numTrees);\n\t\tfor (var i = 0; i < this.numTrees; i++) {\n\t\t\tthis.trees[i] = new DecisionTree();\n\t\t\tthis.trees[i].train(data, labels, options);\n\t\t}\n\t}\n\n\t/**\n\t * [trainCRP description]\n\t *\n\t * Modified train function for distributed computation\n\t *\n\t * @param  {Array}  data    - [description]\n\t * @param  {Array}  labels  - [description]\n\t * @param  {Object} options - [description]\n\t * @return {Stream}           [description]\n\t */\n\ttrainCRP (data, labels, options = {}) {\n\t\tthis.numTrees = options.numTrees || 100;\n\n\t\t// ignore local environment endpoint\n\t\toptions.url = \"https://api.crowdprocess.com:443\"\n\n\t\tif (!options.token && !options.email || !options.password) {\n\t\t\tthrow new Error('Missing credentials!');\n\t\t}\n\n\t\tvar dataset = JSON.stringify({ data, labels, options})\n\t\treturn CrowdProcess(options)(Array.apply(null, new Array(this.numTrees)).map(()=> dataset),\n\t\t\t[ // ~ program (incl. imports)\n\t\t\t\tDecisionTreeRaw,\n\t\t\t\tfunction Run (task) {\n\t\t\t\t\tvar {data, labels, options} = JSON.parse(task)\n\t\t\t\t\tvar tree = new DecisionTree()\n\t\t\t\t\ttree.train(data, labels, options)\n\t\t\t\t\treturn JSON.stringify(tree);\n\t\t\t\t}\n\t\t\t].map((fn)=>fn.toString()).join('\\n')\n\t\t\t\t/** webpack loader modified reference -> unformat inside the Run function.... **/\n\t\t\t\t.replace(/_DecisionTree2\\['default'\\]/g, 'DecisionTree')\n\t\t\t\t, (results)=> this.trees = results.map((result) => new DecisionTree(result))\n\t\t\t)\n\t\t.on('error', ::console.error)\n\t}\n\n\t/**\n\t * [predictOne description]\n\t * inst is a 1D array of length D of an example.\n\t * returns the probability of label 1, i.e. a number in range [0, 1]\n\t *\n\t * @param  {Array}  inst -\n\t * @return {Number}\n\t */\n\tpredictOne (inst) {\n\t\t// have each tree predict and average out all votes\n\t\tvar dec = 0;\n\t\tvar num = this.trees.length;\n\t\tfor (var i = 0; i < num; i++) { // ~ numTrees\n\t\t\tdec += this.trees[i].predictOne(inst);\n\t\t}\n\t\treturn dec / num;\n\t}\n\n\t/**\n\t * [predict description]\n\t * convenience function. Here, data is NxD array.\n\t * returns probabilities of being 1 for all data in an array.\n\t *\n\t * @param  {Array}  data -\n\t * @return {Number}\n\t */\n\tpredict (data) {\n\t\tvar probabilities = new Array(data.length);\n\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\tprobabilities[i] = this.predictOne(data[i]);\n\t\t}\n\t\treturn probabilities;\n\t}\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/RandomForest.js\n **/","var Stream = require('stream');\nvar JobClient = require('crp-job-client');\nvar StreamClient = require('crp-stream-client');\nvar inherits = require('util').inherits;\n\n\nvar Duplex = Stream.Duplex ||\n  require('readable-stream').Duplex;\n\nvar PassThrough = Stream.PassThrough ||\n  require('readable-stream').PassThrough;\n\nmodule.exports = CrowdProcess;\n\nfunction CrowdProcess(username, password) {\n  var opts = {};\n  if (arguments.length === 1 &&\n      typeof arguments[0] === 'string') {\n    opts.token = arguments[0];\n  }\n\n  if (arguments.length === 1 &&\n      typeof arguments[0] === 'object') {\n    opts = arguments[0];\n  }\n\n  if (arguments.length === 2 &&\n      typeof arguments[0] === 'string' &&\n      typeof arguments[1] === 'string') {\n    opts.email = arguments[0];\n    opts.password = arguments[1];\n  }\n\n  var jobs = JobClient(opts);\n  var streams = StreamClient(opts);\n\n  function DuplexThrough(data, program, onResults) {\n    if (!(this instanceof DuplexThrough)) {\n      return new DuplexThrough(data, program, onResults);\n    }\n\n    var self = this;\n\n    var opts = {};\n\n    if (data instanceof Object &&\n        Object.getPrototypeOf(data) === Object.prototype) {\n      opts = data;\n    }\n\n    if (data instanceof Stream || data instanceof Array) {\n      opts.data = data;\n    }\n\n    if (data instanceof Function) {\n      opts.program = data.toString();\n    }\n\n    if (typeof data === 'string') {\n      opts.program = data;\n    }\n\n    if (Buffer.isBuffer(data)) {\n      opts.program = data.toString();\n    }\n\n    if (!opts.program &&\n        (program instanceof Function ||\n         typeof program === 'string' ||\n         Buffer.isBuffer(program))) {\n      opts.program = program;\n    }\n\n    if (!opts.mock &&\n        opts.program instanceof Function) {\n      opts.program = opts.program.toString();\n    }\n\n    if (Buffer.isBuffer(opts.program)) {\n      opts.program = opts.program.toString();\n    }\n\n    if (opts.program &&\n        !opts.data &&\n        program instanceof Function) {\n      opts.onResults = program;\n    }\n\n    if (onResults instanceof Function) {\n      opts.onResults = onResults;\n    }\n\n    opts.objectMode = true; // force objectMode\n\n    Duplex.call(this, opts);\n\n    this.opts = opts;\n\n    this.inRStream = new PassThrough(opts); // tasks\n    this.outWStream = new PassThrough(opts); // results\n\n    this.numTasks = 0;\n    this.numResults = 0;\n    this.bufferedResults = [];\n\n    this.on('pipe', function (src) {\n      src.on('end', function () {\n        self.inRStream.end();\n      });\n    });\n\n    this.on('end', function () {\n      self.inRStream.end();\n    });\n\n    if (opts.id) {\n      process.nextTick(function () {\n        onJobCreation(null, {\n          id: opts.id\n        });\n      });\n    } else if (opts.mock) {\n      process.nextTick(onJobCreation);\n    } else {\n      jobs.create({\n        program: opts.program,\n        group: opts.group,\n        bid: opts.bid\n      }, onJobCreation);\n    }\n\n    function onJobCreation (err, res) {\n      if (err) {\n        self.emit('error', err);\n        return;\n      }\n\n      if (!self.opts.mock) {\n        var id = res.id;\n        if (!self.opts.id) {\n          self.emit('created', id);\n        }\n        self.resultStream = streams(id).Results({ stream: true });\n        self.errorStream = streams(id).Errors({ stream: true });\n        self.taskStream = streams(id).Tasks();\n\n        self.inRStream.pipe(self.taskStream);\n        self.resultStream.pipe(self.outWStream);\n\n        self.errorStream.on('data', function (err) {\n          self.numResults++;\n          self.emit('error', err);\n          self._maybeClose();\n        });\n      }\n\n      if (self.opts.data instanceof Stream) {\n        self.opts.data.pipe(self);\n        self.opts.data.on('end', function () {\n          self.inRStream.end();\n          self.end();\n        });\n      }\n\n      if (self.opts.data instanceof Array) {\n        var data = self.opts.data;\n        var n = data.length;\n        for (var i = 0; i < n; i++) {\n          self.numTasks++;\n          if (data[i] === null) { // just so it doesn't close the stream!\n            self.inRStream.write(0);\n          } else {\n            self.inRStream.write(data[i]);\n          }\n        }\n        self.inRStream.end();\n        self.end();\n      }\n\n      if (self.opts.onResults) {\n        self.on('data', function (chunk) {\n          self.bufferedResults.push(chunk);\n        });\n      }\n\n      self.outWStream.on('readable', function () {\n        self._read(0);\n      });\n\n      self.outWStream.on('end', function () {\n        self.push(null);\n      });\n\n      if (self.opts.mock) {\n        var program = self.opts.program;\n\n        if (typeof program === 'string') {\n          throw new Error('In mock mode, your program has to be a function.');\n        }\n\n        self.inRStream.on('data', function (d) {\n          var result;\n          if (program.length === 2) {\n            program(d, onResult);\n          } else {\n            result = program(d);\n            onResult(result);\n          }\n\n          function onResult (result) {\n            process.nextTick(function () {\n              self.outWStream.write(result);\n            });\n          }\n        });\n      }\n    }\n  }\n\n  inherits(DuplexThrough, Duplex);\n\n  DuplexThrough.prototype._write = _write;\n  function _write (chunk, enc, cb) {\n    var self = this;\n    self.numTasks++;\n    if (self.inRStream.write(chunk)) {\n      cb();\n      self._maybeClose();\n    } else {\n      self.inRStream.once('drain', cb);\n    }\n  }\n\n  DuplexThrough.prototype._read = _read;\n  function _read (n) {\n    var self = this;\n    while (null !== (chunk = self.outWStream.read())) {\n      self.numResults++;\n      if (!self.push(chunk)) {\n        break;\n      }\n\n      self._maybeClose();\n    }\n  }\n\n  DuplexThrough.prototype._maybeClose = _maybeClose;\n  function _maybeClose () {\n    var self = this;\n    if (self.ended) {\n      return;\n    }\n\n    if (self._writableState.ended && self.numResults == self.numTasks) {\n      self.ended = true;\n      if (!self.opts.mock) {\n        self.resultStream.end();\n        self.errorStream.end();\n      }\n      self.inRStream.end();\n      self.push(null);\n      if (self.opts.onResults) {\n        self.opts.onResults(self.bufferedResults);\n      }\n    }\n  }\n\n  // legacy\n  DuplexThrough.map = DuplexThrough;\n\n  return DuplexThrough;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crowdprocess/index.js\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = require(\"util\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"util\"\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = require(\"stream\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"stream\"\n ** module id = 5\n ** module chunks = 0\n **/","var request = require('hyperquest');\nvar stream2Buffer = require('stream2buffer');\nvar extend = require('./lib/extend');\nvar config = require('./config');\n\nvar defaultOptions = {\n  url: config.server.url\n};\n\nexports =\nmodule.exports =\nfunction Client(options) {\n  if (!options)\n    options = {};\n  options = extend(extend({}, defaultOptions), options);\n\n  var defaultReqOpts = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  if (options.token)\n    defaultReqOpts.headers.Authorization = \"token \" + options.token;\n\n  if (options.email && options.password)\n    defaultReqOpts.headers.Authorization = \"Basic \"+\n      (new Buffer(options.email+':'+options.password)\n        .toString('base64'));\n\n  function jobs (jobId) {\n    return {\n      show: Show(options, defaultReqOpts, jobId),\n      destroy: Destroy(options, defaultReqOpts, jobId)\n    };\n  }\n\n  jobs.create = create;\n  function create(jobDoc, cb) {\n\n    var opts = extend({\n      uri: options.url + '/jobs'\n    }, defaultReqOpts);\n\n    var req = request.post(opts, function(err, res) {\n      if (err) {\n        throw new Error(err);\n      }\n\n      if (res.statusCode !== 201) {\n        err = new Error('Response status code is ' + res.statusCode);\n        err.status = res.statusCode;\n        return cb(err);\n      }\n      stream2Buffer(req, function (err, body) { // boyd:\n        if (err) {\n          throw new Error(err);\n        }\n        cb(err, JSON.parse(body.toString())); // {id: token}\n      });\n    });\n\n    req.write(JSON.stringify(jobDoc));\n    req.end();\n  }\n\n  jobs.list = list;\n  function list(cb) {\n    var opts = extend({\n      uri: options.url + '/jobs'\n    }, defaultReqOpts);\n\n    var req = request.get(opts, function(err, res) {\n      if (err)\n        return cb(err);\n\n      if (res.statusCode !== 200) {\n        err = new Error('Response status code is ' + res.statusCode);\n        err.status = res.statusCode;\n        return cb(err);\n      }\n\n      stream2Buffer(req, function (err, body) {\n        if (err)\n          throw new Error(err);\n\n        cb(null, JSON.parse(body.toString()));\n      });\n    });\n  }\n\n  jobs.listStream = listStream;\n  function listStream () {\n    var opts = extend({\n      uri: options.url + '/jobs?stream=true'\n    }, defaultReqOpts);\n\n    var req = request.get(opts);\n    return req;\n  }\n\n\n  jobs.purge = purge;\n  function purge(cb) {\n    var opts = extend({\n      uri: options.url + '/jobs',\n      method: 'DELETE'\n    }, defaultReqOpts);\n\n    var req = request.del(opts, function (err, res) {\n      if (err)\n        throw new Error(err);\n\n      if (res.statusCode != 204) {\n        err = new Error('Response status code is ' + res.statusCode);\n        err.status = res.statusCode;\n        return cb(err);\n      }\n\n      cb(null);\n    });\n  }\n\n  return jobs;\n};\n\nfunction Show (options, defaultReqOpts, jobId) {\n  return function show (cb) {\n    var opts = extend({\n      uri: options.url + '/jobs/' + jobId\n    }, defaultReqOpts);\n\n    var req = request.get(opts, function(err, res) {\n      if (err)\n        throw new Error(err);\n\n      if (res.statusCode !== 200) {\n        err = new Error('Response status code is ' + res.statusCode);\n        err.status = res.statusCode;\n        return cb(err);\n      }\n\n      stream2Buffer(req, function (err, body) {\n        if (err)\n          throw new Error(err);\n\n        cb(err, JSON.parse(body.toString()));\n      });\n    });\n  };\n}\n\nfunction Destroy (options, defaultReqOpts, jobId) {\n  return function destroy (cb) {\n    var opts = extend({\n      uri: options.url + '/jobs/' + jobId,\n      method: 'DELETE'\n    }, defaultReqOpts);\n\n    var req = request(opts, function (err, res) {\n      if (err)\n        throw new Error(err);\n\n      if (res.statusCode !== 204) {\n        err = new Error('Response status code is ' + res.statusCode);\n        err.status = req.statusCode;\n        return cb(err);\n      }\n\n      cb(null);\n    });\n  };\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crowdprocess/~/crp-job-client/index.js\n ** module id = 6\n ** module chunks = 0\n **/","var url = require('url');\nvar http = require('http');\nvar https = require('https');\nvar through = require('through');\nvar duplexer = require('duplexer');\n\nmodule.exports = hyperquest;\n\nfunction bind (obj, fn) {\n  var args = Array.prototype.slice.call(arguments, 2);\n  return function () {\n    var argv = args.concat(Array.prototype.slice.call(arguments));\n    return fn.apply(obj, argv);\n  }\n}\n\nfunction hyperquest (uri, opts, cb, extra) {\n    if (typeof uri === 'object') {\n        cb = opts;\n        opts = uri;\n        uri = undefined;\n    }\n    if (typeof opts === 'function') {\n      cb = opts;\n      opts = undefined;\n    }\n    if (!opts) opts = {};\n    if (uri !== undefined) opts.uri = uri;\n    if (extra) opts.method = extra.method;\n    \n    var req = new Req(opts);\n    var ws = req.duplex && through();\n    if (ws) ws.pause();\n    var rs = through();\n    \n    var dup = req.duplex ? duplexer(ws, rs) : rs;\n    if (!req.duplex) {\n        rs.writable = false;\n    }\n    dup.request = req;\n    dup.setHeader = bind(req, req.setHeader);\n    dup.setLocation = bind(req, req.setLocation);\n    \n    var closed = false;\n    dup.on('close', function () { closed = true });\n    \n    process.nextTick(function () {\n        if (closed) return;\n        dup.on('close', function () { r.destroy() });\n        \n        var r = req._send();\n        r.on('error', bind(dup, dup.emit, 'error'));\n        \n        r.on('response', function (res) {\n            dup.response = res;\n            dup.emit('response', res);\n            if (req.duplex) res.pipe(rs)\n            else {\n                res.on('data', function (buf) { rs.queue(buf) });\n                res.on('end', function () { rs.queue(null) });\n            }\n        });\n        \n        if (req.duplex) {\n            ws.pipe(r);\n            ws.resume();\n        }\n        else r.end();\n    });\n    \n    if (cb) {\n        dup.on('error', cb);\n        dup.on('response', bind(dup, cb, null));\n    }\n    return dup;\n}\n\nhyperquest.get = hyperquest;\n\nhyperquest.post = function (uri, opts, cb) {\n    return hyperquest(uri, opts, cb, { method: 'POST' });\n};\n\nhyperquest.put = function (uri, opts, cb) {\n    return hyperquest(uri, opts, cb, { method: 'PUT' });\n};\n\nhyperquest['delete'] = function (uri, opts, cb) {\n    return hyperquest(uri, opts, cb, { method: 'DELETE' });\n};\n\nfunction Req (opts) {\n    this.headers = opts.headers || {};\n    \n    var method = (opts.method || 'GET').toUpperCase();\n    this.method = method;\n    this.duplex = !(method === 'GET' || method === 'DELETE'\n        || method === 'HEAD');\n    this.auth = opts.auth;\n    \n    this.options = opts;\n    \n    if (opts.uri) this.setLocation(opts.uri);\n}\n\nReq.prototype._send = function () {\n    this._sent = true;\n    \n    var headers = this.headers || {};\n    var u = url.parse(this.uri);\n    var au = u.auth || this.auth;\n    if (au) {\n        headers.authorization = 'Basic ' + Buffer(au).toString('base64');\n    }\n    \n    var protocol = u.protocol || '';\n    var iface = protocol === 'https:' ? https : http;\n    var opts = {\n        scheme: protocol.replace(/:$/, ''),\n        method: this.method,\n        host: u.hostname,\n        port: Number(u.port) || (protocol === 'https:' ? 443 : 80),\n        path: u.path,\n        agent: false,\n        headers: headers,\n        withCredentials: this.options.withCredentials\n    };\n    if (protocol === 'https:') {\n        opts.pfx = this.options.pfx;\n        opts.key = this.options.key;\n        opts.cert = this.options.cert;\n        opts.ca = this.options.ca;\n        opts.ciphers = this.options.ciphers;\n        opts.rejectUnauthorized = this.options.rejectUnauthorized;\n        opts.secureProtocol = this.options.secureProtocol;\n    }\n    var req = iface.request(opts);\n    \n    if (req.setTimeout) req.setTimeout(Math.pow(2, 32) * 1000);\n    return req;\n};\n\nReq.prototype.setHeader = function (key, value) {\n    if (this._sent) throw new Error('request already sent');\n    this.headers[key] = value;\n    return this;\n};\n\nReq.prototype.setLocation = function (uri) {\n    this.uri = uri;\n    return this;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crowdprocess/~/crp-job-client/~/hyperquest/index.js\n ** module id = 7\n ** module chunks = 0\n **/","module.exports = require(\"url\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"url\"\n ** module id = 8\n ** module chunks = 0\n **/","module.exports = require(\"http\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"http\"\n ** module id = 9\n ** module chunks = 0\n **/","module.exports = require(\"https\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"https\"\n ** module id = 10\n ** module chunks = 0\n **/","var Stream = require('stream')\n\n// through\n//\n// a stream that does nothing but re-emit the input.\n// useful for aggregating a series of changing but not ending streams into one stream)\n\n\n\nexports = module.exports = through\nthrough.through = through\n\n//create a readable writable stream.\n\nfunction through (write, end) {\n  write = write || function (data) { this.queue(data) }\n  end = end || function () { this.queue(null) }\n\n  var ended = false, destroyed = false, buffer = []\n  var stream = new Stream()\n  stream.readable = stream.writable = true\n  stream.paused = false\n\n  stream.write = function (data) {\n    write.call(this, data)\n    return !stream.paused\n  }\n\n  function drain() {\n    while(buffer.length && !stream.paused) {\n      var data = buffer.shift()\n      if(null === data)\n        return stream.emit('end')\n      else\n        stream.emit('data', data)\n    }\n  }\n\n  stream.queue = stream.push = function (data) {\n    buffer.push(data)\n    drain()\n    return stream\n  }\n\n  //this will be registered as the first 'end' listener\n  //must call destroy next tick, to make sure we're after any\n  //stream piped from here.\n  //this is only a problem if end is not emitted synchronously.\n  //a nicer way to do this is to make sure this is the last listener for 'end'\n\n  stream.on('end', function () {\n    stream.readable = false\n    if(!stream.writable)\n      process.nextTick(function () {\n        stream.destroy()\n      })\n  })\n\n  function _end () {\n    stream.writable = false\n    end.call(stream)\n    if(!stream.readable)\n      stream.destroy()\n  }\n\n  stream.end = function (data) {\n    if(ended) return\n    ended = true\n    if(arguments.length) stream.write(data)\n    _end() // will emit or queue\n    return stream\n  }\n\n  stream.destroy = function () {\n    if(destroyed) return\n    destroyed = true\n    ended = true\n    buffer.length = 0\n    stream.writable = stream.readable = false\n    stream.emit('close')\n    return stream\n  }\n\n  stream.pause = function () {\n    if(stream.paused) return\n    stream.paused = true\n    stream.emit('pause')\n    return stream\n  }\n  stream.resume = function () {\n    if(stream.paused) {\n      stream.paused = false\n    }\n    drain()\n    //may have become paused again,\n    //as drain emits 'data'.\n    if(!stream.paused)\n      stream.emit('drain')\n    return stream\n  }\n  return stream\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crowdprocess/~/crp-job-client/~/hyperquest/~/through/index.js\n ** module id = 11\n ** module chunks = 0\n **/","var Stream = require(\"stream\")\nvar writeMethods = [\"write\", \"end\", \"destroy\"]\nvar readMethods = [\"resume\", \"pause\"]\nvar readEvents = [\"data\", \"close\"]\nvar slice = Array.prototype.slice\n\nmodule.exports = duplex\n\nfunction forEach (arr, fn) {\n    if (arr.forEach) {\n        return arr.forEach(fn)\n    }\n\n    for (var i = 0; i < arr.length; i++) {\n        fn(arr[i], i)\n    }\n}\n\nfunction duplex(writer, reader) {\n    var stream = new Stream()\n    var ended = false\n\n    forEach(writeMethods, proxyWriter)\n\n    forEach(readMethods, proxyReader)\n\n    forEach(readEvents, proxyStream)\n\n    reader.on(\"end\", handleEnd)\n\n    writer.on(\"drain\", function() {\n      stream.emit(\"drain\")\n    })\n\n    writer.on(\"error\", reemit)\n    reader.on(\"error\", reemit)\n\n    stream.writable = writer.writable\n    stream.readable = reader.readable\n\n    return stream\n\n    function proxyWriter(methodName) {\n        stream[methodName] = method\n\n        function method() {\n            return writer[methodName].apply(writer, arguments)\n        }\n    }\n\n    function proxyReader(methodName) {\n        stream[methodName] = method\n\n        function method() {\n            stream.emit(methodName)\n            var func = reader[methodName]\n            if (func) {\n                return func.apply(reader, arguments)\n            }\n            reader.emit(methodName)\n        }\n    }\n\n    function proxyStream(methodName) {\n        reader.on(methodName, reemit)\n\n        function reemit() {\n            var args = slice.call(arguments)\n            args.unshift(methodName)\n            stream.emit.apply(stream, args)\n        }\n    }\n\n    function handleEnd() {\n        if (ended) {\n            return\n        }\n        ended = true\n        var args = slice.call(arguments)\n        args.unshift(\"end\")\n        stream.emit.apply(stream, args)\n    }\n\n    function reemit(err) {\n        stream.emit(\"error\", err)\n    }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crowdprocess/~/crp-job-client/~/hyperquest/~/duplexer/index.js\n ** module id = 12\n ** module chunks = 0\n **/","module.exports = function streamToBuffer(stream, callback) {\n  var done = false;\n  var buffers = [];\n\n  stream.on('data', function (data) {\n    buffers.push(data);\n  });\n\n  stream.on('end', function () {\n    if (done)\n      return;\n\n    done = true;\n\n    var buff;\n\n    try {\n      buff = Buffer.concat(buffers);\n    } catch (err) {\n      if (stream._readableState) {\n        if (stream._readableState.encoding === 'utf8' ||\n            stream._readableState.encoding === 'ascii')\n          buff = buffers.join('');\n\n        if (stream._readableState.objectMode)\n          buff = buffers;\n      } else\n        buff = buffers.join('');\n    }\n\n    callback(null, buff);\n    buffers.length = 0;\n  });\n\n  stream.on('error', function (err) {\n    done = true;\n    buffers = null;\n    callback(err);\n  });\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crowdprocess/~/crp-job-client/~/stream2buffer/index.js\n ** module id = 13\n ** module chunks = 0\n **/","exports =\nmodule.exports =\nfunction extend (origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || typeof add !== 'object')\n    return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n\n  return origin;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crowdprocess/~/crp-job-client/lib/extend.js\n ** module id = 14\n ** module chunks = 0\n **/","exports.server =\n  (process.env.NODE_ENV === 'development') ?\n    {\n      \"url\": \"http://localhost:8002\"\n    }\n :\n    {\n      \"url\": \"https://api.crowdprocess.com:443\"\n    };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crowdprocess/~/crp-job-client/config.js\n ** module id = 15\n ** module chunks = 0\n **/","var config = require('./config');\nvar TaskStream = require('./tasks-stream');\nvar ResultsStream = require('./results-stream');\nvar ErrorsStream = require('./errors-stream');\n\nmodule.exports = Client;\n\nfunction Client(options) {\n  var defaultReqOpts = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  if (!options) {\n    options = {};\n  }\n\n  if (options.token)\n    defaultReqOpts.headers.Authorization = \"token \" + options.token;\n\n  if (options.email && options.password)\n    defaultReqOpts.headers.Authorization = \"Basic \"+\n      (new Buffer(options.email+':'+options.password)\n        .toString('base64'));\n\n  options.baseUrl = (options.url || config.server.url) + '/jobs/';\n\n  return function streams (jobId) {\n    return {\n      Tasks: TaskStream(jobId, defaultReqOpts, options),\n      Results: ResultsStream(jobId, defaultReqOpts, options),\n      Errors: ErrorsStream(jobId, defaultReqOpts, options),\n    };\n  };\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crowdprocess/~/crp-stream-client/index.js\n ** module id = 16\n ** module chunks = 0\n **/","exports.server =\n  (process.env.NODE_ENV === 'development') ?\n    {\n      \"url\": \"http://localhost:8002\"\n    }\n :\n    {\n      \"url\": \"https://api.crowdprocess.com:443\"\n    };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crowdprocess/~/crp-stream-client/config.js\n ** module id = 17\n ** module chunks = 0\n **/","var Transform = require('stream').Transform;\nvar extend = require('util')._extend;\nvar request = require('hyperquest');\nvar querystring = require('querystring');\nvar nlJSON = require('newline-json');\n\nmodule.exports = TaskStream;\nfunction TaskStream (jobId, defaultReqOpts, options) {\n  return function taskStream () {\n    var opts = extend({\n      uri: options.baseUrl + encodeURIComponent(jobId) + '/tasks',\n    }, defaultReqOpts);\n\n    var req = request.post(opts);\n    req.on('response', checkStatus);\n    function checkStatus() {\n      var status = req.response.statusCode;\n      // 0 means client canceled on the browser\n      if (status !== 201 && status !== 0) {\n        var err = new Error('Unexpected status code: ' + status);\n        err.status = status;\n        throw err;\n      }\n    }\n\n    var stringifier = new nlJSON.Stringifier();\n    stringifier.pipe(req);\n\n    return stringifier;\n  };\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crowdprocess/~/crp-stream-client/tasks-stream.js\n ** module id = 18\n ** module chunks = 0\n **/","var url = require('url');\nvar http = require('http');\nvar https = require('https');\nvar through = require('through');\nvar duplexer = require('duplexer');\n\nmodule.exports = hyperquest;\n\nfunction bind (obj, fn) {\n  var args = Array.prototype.slice.call(arguments, 2);\n  return function () {\n    var argv = args.concat(Array.prototype.slice.call(arguments));\n    return fn.apply(obj, argv);\n  }\n}\n\nfunction hyperquest (uri, opts, cb, extra) {\n    if (typeof uri === 'object') {\n        cb = opts;\n        opts = uri;\n        uri = undefined;\n    }\n    if (typeof opts === 'function') {\n      cb = opts;\n      opts = undefined;\n    }\n    if (!opts) opts = {};\n    if (uri !== undefined) opts.uri = uri;\n    if (extra) opts.method = extra.method;\n    \n    var req = new Req(opts);\n    var ws = req.duplex && through();\n    if (ws) ws.pause();\n    var rs = through();\n    \n    var dup = req.duplex ? duplexer(ws, rs) : rs;\n    if (!req.duplex) {\n        rs.writable = false;\n    }\n    dup.request = req;\n    dup.setHeader = bind(req, req.setHeader);\n    dup.setLocation = bind(req, req.setLocation);\n    \n    var closed = false;\n    dup.on('close', function () { closed = true });\n    \n    process.nextTick(function () {\n        if (closed) return;\n        dup.on('close', function () { r.destroy() });\n        \n        var r = req._send();\n        r.on('error', bind(dup, dup.emit, 'error'));\n        \n        r.on('response', function (res) {\n            dup.response = res;\n            dup.emit('response', res);\n            if (req.duplex) res.pipe(rs)\n            else {\n                res.on('data', function (buf) { rs.queue(buf) });\n                res.on('end', function () { rs.queue(null) });\n            }\n        });\n        \n        if (req.duplex) {\n            ws.pipe(r);\n            ws.resume();\n        }\n        else r.end();\n    });\n    \n    if (cb) {\n        dup.on('error', cb);\n        dup.on('response', bind(dup, cb, null));\n    }\n    return dup;\n}\n\nhyperquest.get = hyperquest;\n\nhyperquest.post = function (uri, opts, cb) {\n    return hyperquest(uri, opts, cb, { method: 'POST' });\n};\n\nhyperquest.put = function (uri, opts, cb) {\n    return hyperquest(uri, opts, cb, { method: 'PUT' });\n};\n\nhyperquest['delete'] = function (uri, opts, cb) {\n    return hyperquest(uri, opts, cb, { method: 'DELETE' });\n};\n\nfunction Req (opts) {\n    this.headers = opts.headers || {};\n    \n    var method = (opts.method || 'GET').toUpperCase();\n    this.method = method;\n    this.duplex = !(method === 'GET' || method === 'DELETE'\n        || method === 'HEAD');\n    this.auth = opts.auth;\n    \n    this.options = opts;\n    \n    if (opts.uri) this.setLocation(opts.uri);\n}\n\nReq.prototype._send = function () {\n    this._sent = true;\n    \n    var headers = this.headers || {};\n    var u = url.parse(this.uri);\n    var au = u.auth || this.auth;\n    if (au) {\n        headers.authorization = 'Basic ' + Buffer(au).toString('base64');\n    }\n    \n    var protocol = u.protocol || '';\n    var iface = protocol === 'https:' ? https : http;\n    var opts = {\n        scheme: protocol.replace(/:$/, ''),\n        method: this.method,\n        host: u.hostname,\n        port: Number(u.port) || (protocol === 'https:' ? 443 : 80),\n        path: u.path,\n        agent: false,\n        headers: headers,\n        withCredentials: this.options.withCredentials\n    };\n    if (protocol === 'https:') {\n        opts.pfx = this.options.pfx;\n        opts.key = this.options.key;\n        opts.cert = this.options.cert;\n        opts.ca = this.options.ca;\n        opts.ciphers = this.options.ciphers;\n        opts.rejectUnauthorized = this.options.rejectUnauthorized;\n        opts.secureProtocol = this.options.secureProtocol;\n    }\n    var req = iface.request(opts);\n    \n    if (req.setTimeout) req.setTimeout(Math.pow(2, 32) * 1000);\n    return req;\n};\n\nReq.prototype.setHeader = function (key, value) {\n    if (this._sent) throw new Error('request already sent');\n    this.headers[key] = value;\n    return this;\n};\n\nReq.prototype.setLocation = function (uri) {\n    this.uri = uri;\n    return this;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crowdprocess/~/crp-stream-client/~/hyperquest/index.js\n ** module id = 19\n ** module chunks = 0\n **/","var Stream = require('stream')\n\n// through\n//\n// a stream that does nothing but re-emit the input.\n// useful for aggregating a series of changing but not ending streams into one stream)\n\n\n\nexports = module.exports = through\nthrough.through = through\n\n//create a readable writable stream.\n\nfunction through (write, end) {\n  write = write || function (data) { this.queue(data) }\n  end = end || function () { this.queue(null) }\n\n  var ended = false, destroyed = false, buffer = []\n  var stream = new Stream()\n  stream.readable = stream.writable = true\n  stream.paused = false\n\n  stream.write = function (data) {\n    write.call(this, data)\n    return !stream.paused\n  }\n\n  function drain() {\n    while(buffer.length && !stream.paused) {\n      var data = buffer.shift()\n      if(null === data)\n        return stream.emit('end')\n      else\n        stream.emit('data', data)\n    }\n  }\n\n  stream.queue = stream.push = function (data) {\n    buffer.push(data)\n    drain()\n    return stream\n  }\n\n  //this will be registered as the first 'end' listener\n  //must call destroy next tick, to make sure we're after any\n  //stream piped from here.\n  //this is only a problem if end is not emitted synchronously.\n  //a nicer way to do this is to make sure this is the last listener for 'end'\n\n  stream.on('end', function () {\n    stream.readable = false\n    if(!stream.writable)\n      process.nextTick(function () {\n        stream.destroy()\n      })\n  })\n\n  function _end () {\n    stream.writable = false\n    end.call(stream)\n    if(!stream.readable)\n      stream.destroy()\n  }\n\n  stream.end = function (data) {\n    if(ended) return\n    ended = true\n    if(arguments.length) stream.write(data)\n    _end() // will emit or queue\n    return stream\n  }\n\n  stream.destroy = function () {\n    if(destroyed) return\n    destroyed = true\n    ended = true\n    buffer.length = 0\n    stream.writable = stream.readable = false\n    stream.emit('close')\n    return stream\n  }\n\n  stream.pause = function () {\n    if(stream.paused) return\n    stream.paused = true\n    stream.emit('pause')\n    return stream\n  }\n  stream.resume = function () {\n    if(stream.paused) {\n      stream.paused = false\n    }\n    drain()\n    //may have become paused again,\n    //as drain emits 'data'.\n    if(!stream.paused)\n      stream.emit('drain')\n    return stream\n  }\n  return stream\n}\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crowdprocess/~/crp-stream-client/~/hyperquest/~/through/index.js\n ** module id = 20\n ** module chunks = 0\n **/","var Stream = require(\"stream\")\nvar writeMethods = [\"write\", \"end\", \"destroy\"]\nvar readMethods = [\"resume\", \"pause\"]\nvar readEvents = [\"data\", \"close\"]\nvar slice = Array.prototype.slice\n\nmodule.exports = duplex\n\nfunction forEach (arr, fn) {\n    if (arr.forEach) {\n        return arr.forEach(fn)\n    }\n\n    for (var i = 0; i < arr.length; i++) {\n        fn(arr[i], i)\n    }\n}\n\nfunction duplex(writer, reader) {\n    var stream = new Stream()\n    var ended = false\n\n    forEach(writeMethods, proxyWriter)\n\n    forEach(readMethods, proxyReader)\n\n    forEach(readEvents, proxyStream)\n\n    reader.on(\"end\", handleEnd)\n\n    writer.on(\"drain\", function() {\n      stream.emit(\"drain\")\n    })\n\n    writer.on(\"error\", reemit)\n    reader.on(\"error\", reemit)\n\n    stream.writable = writer.writable\n    stream.readable = reader.readable\n\n    return stream\n\n    function proxyWriter(methodName) {\n        stream[methodName] = method\n\n        function method() {\n            return writer[methodName].apply(writer, arguments)\n        }\n    }\n\n    function proxyReader(methodName) {\n        stream[methodName] = method\n\n        function method() {\n            stream.emit(methodName)\n            var func = reader[methodName]\n            if (func) {\n                return func.apply(reader, arguments)\n            }\n            reader.emit(methodName)\n        }\n    }\n\n    function proxyStream(methodName) {\n        reader.on(methodName, reemit)\n\n        function reemit() {\n            var args = slice.call(arguments)\n            args.unshift(methodName)\n            stream.emit.apply(stream, args)\n        }\n    }\n\n    function handleEnd() {\n        if (ended) {\n            return\n        }\n        ended = true\n        var args = slice.call(arguments)\n        args.unshift(\"end\")\n        stream.emit.apply(stream, args)\n    }\n\n    function reemit(err) {\n        stream.emit(\"error\", err)\n    }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crowdprocess/~/crp-stream-client/~/hyperquest/~/duplexer/index.js\n ** module id = 21\n ** module chunks = 0\n **/","module.exports = require(\"querystring\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"querystring\"\n ** module id = 22\n ** module chunks = 0\n **/","exports.Stringifier = require('./stringifier');\nexports.Parser = require('./parser');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crowdprocess/~/crp-stream-client/~/newline-json/index.js\n ** module id = 23\n ** module chunks = 0\n **/","var util = require('util');\nvar Transform = require('stream').Transform;\nutil.inherits(Stringifier, Transform);\n\nfunction Stringifier(options) {\n  if (!options)\n    options = {};\n\n  if (!(this instanceof Stringifier))\n    return new Stringifier(options);\n\n  Transform.call(this, options);\n  this._writableState.objectMode = true;\n  this._readableState.objectMode = false;\n}\n\nStringifier.prototype._transform = function(chunk, encoding, done) {\n  this.push(JSON.stringify(chunk)+'\\n');\n  done();\n};\n\nmodule.exports = Stringifier;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crowdprocess/~/crp-stream-client/~/newline-json/stringifier.js\n ** module id = 24\n ** module chunks = 0\n **/","// shamelessly borrowed from http://nodejs.org/api/stream.html\n\nvar util = require('util');\nvar StringDecoder = require('string_decoder').StringDecoder;\nvar Transform = require('stream').Transform;\nutil.inherits(Parser, Transform);\n\nfunction Parser(options) {\n  if (!(this instanceof Parser))\n    return new Parser(options);\n\n  Transform.call(this, options);\n  this._writableState.objectMode = false;\n  this._readableState.objectMode = true;\n  this._buffer = '';\n  this._decoder = new StringDecoder('utf8');\n}\n\nParser.prototype._transform = function(chunk, encoding, cb) {\n  this._buffer += this._decoder.write(chunk);\n  var lines = this._buffer.split(/\\r?\\n/);\n  this._buffer = lines.pop();\n  for (var l = 0; l < lines.length; l++) {\n    var line = lines[l];\n    try {\n      var obj = JSON.parse(line);\n      this.push((obj === null || obj === undefined) ? false : obj);\n    } catch (err) {\n      var context = lines.slice(l).join('\\n')+'\\n'+this._buffer;\n      er = new Error(err.message+' in '+JSON.stringify(context));\n      this.emit('error', er);\n      return;\n    }\n  }\n  cb();\n};\n\nParser.prototype._flush = function(cb) {\n  var rem = this._buffer.trim();\n  if (rem) {\n    try {\n      var obj = JSON.parse(rem);\n      this.push(obj);\n    } catch (err) {\n      this.emit('error', err);\n      return;\n    }\n  }\n  cb();\n};\n\nmodule.exports = Parser;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crowdprocess/~/crp-stream-client/~/newline-json/parser.js\n ** module id = 25\n ** module chunks = 0\n **/","module.exports = require(\"string_decoder\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"string_decoder\"\n ** module id = 26\n ** module chunks = 0\n **/","var Transform = require('stream').Transform;\nvar extend = require('util')._extend;\nvar request = require('hyperquest');\nvar querystring = require('querystring');\nvar nlJSON = require('newline-json');\n\nmodule.exports = ResultStream;\nfunction ResultStream(jobId, defaultReqOpts, options) {\n  return function resultStream (reqOpts) {\n    if (!reqOpts)\n      reqOpts = {};\n\n    var url = options.baseUrl +\n              encodeURIComponent(jobId) +\n              '/results?' +\n              querystring.stringify(reqOpts);\n\n    var opts = extend({\n      uri: url\n    }, defaultReqOpts);\n\n    var req = request(opts);\n    req.on('response', checkStatus);\n    function checkStatus() {\n      var status = req.response.statusCode;\n      // 0 means client canceled on the browser\n      if (status !== 200 && status !== 0) {\n        var err = new Error('Unexpected status code: ' + status);\n        err.status = status;\n        throw err;\n      }\n    }\n\n    var parser = new nlJSON.Parser();\n    req.pipe(parser);\n\n    parser.on('end', function() {\n      req.end();\n    });\n\n    return parser;\n  };\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crowdprocess/~/crp-stream-client/results-stream.js\n ** module id = 27\n ** module chunks = 0\n **/","var Transform = require('stream').Transform;\nvar extend = require('util')._extend;\nvar request = require('hyperquest');\nvar querystring = require('querystring');\nvar nlJSON = require('newline-json');\n\nmodule.exports = ErrorsStream;\nfunction ErrorsStream(jobId, defaultReqOpts, options) {\n  return function errorStream (reqOpts) {\n    if (!reqOpts)\n      reqOpts = {};\n\n    var url = options.baseUrl +\n              encodeURIComponent(jobId) +\n              '/errors?' +\n              querystring.stringify(reqOpts);\n\n    var opts = extend({\n      uri: url\n    }, defaultReqOpts);\n\n    var req = request(opts);\n    req.on('response', checkStatus);\n    function checkStatus() {\n      var status = req.response.statusCode;\n      // 0 means client canceled on the browser\n      if (status !== 200 && status !== 0) {\n        var err = new Error('Unexpected status code: ' + status);\n        err.status = status;\n        throw err;\n      }\n    }\n\n    var parser = new nlJSON.Parser();\n    req.pipe(parser);\n\n    parser.on('end', function() {\n      req.end();\n    });\n\n    return parser;\n  };\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crowdprocess/~/crp-stream-client/errors-stream.js\n ** module id = 28\n ** module chunks = 0\n **/","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = require('stream');\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crowdprocess/~/readable-stream/readable.js\n ** module id = 29\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nforEach(objectKeys(Writable.prototype), function(method) {\n  if (!Duplex.prototype[method])\n    Duplex.prototype[method] = Writable.prototype[method];\n});\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex))\n    return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false)\n    this.readable = false;\n\n  if (options && options.writable === false)\n    this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false)\n    this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended)\n    return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(this.end.bind(this));\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crowdprocess/~/readable-stream/lib/_stream_duplex.js\n ** module id = 30\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nfunction isBuffer(arg) {\n  return Buffer.isBuffer(arg);\n}\nexports.isBuffer = isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crowdprocess/~/readable-stream/~/core-util-is/lib/util.js\n ** module id = 31\n ** module chunks = 0\n **/","module.exports = require('util').inherits\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crowdprocess/~/readable-stream/~/inherits/inherits.js\n ** module id = 32\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\nvar EE = require('events').EventEmitter;\n\n/*<replacement>*/\nif (!EE.listenerCount) EE.listenerCount = function(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\nvar Stream = require('stream');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar StringDecoder;\n\n\n/*<replacement>*/\nvar debug = require('util');\nif (debug && debug.debuglog) {\n  debug = debug.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\n\nutil.inherits(Readable, Stream);\n\nfunction ReadableState(options, stream) {\n  var Duplex = require('./_stream_duplex');\n\n  options = options || {};\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = options.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.buffer = [];\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex)\n    this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder)\n      StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  var Duplex = require('./_stream_duplex');\n\n  if (!(this instanceof Readable))\n    return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  Stream.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function(chunk, encoding) {\n  var state = this._readableState;\n\n  if (util.isString(chunk) && !state.objectMode) {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = new Buffer(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function(chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (util.isNullOrUndefined(chunk)) {\n    state.reading = false;\n    if (!state.ended)\n      onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var e = new Error('stream.unshift() after end event');\n      stream.emit('error', e);\n    } else {\n      if (state.decoder && !addToFront && !encoding)\n        chunk = state.decoder.write(chunk);\n\n      if (!addToFront)\n        state.reading = false;\n\n      // if we want the data now, just emit it.\n      if (state.flowing && state.length === 0 && !state.sync) {\n        stream.emit('data', chunk);\n        stream.read(0);\n      } else {\n        // update the buffer info.\n        state.length += state.objectMode ? 1 : chunk.length;\n        if (addToFront)\n          state.buffer.unshift(chunk);\n        else\n          state.buffer.push(chunk);\n\n        if (state.needReadable)\n          emitReadable(stream);\n      }\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended &&\n         (state.needReadable ||\n          state.length < state.highWaterMark ||\n          state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function(enc) {\n  if (!StringDecoder)\n    StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 128MB\nvar MAX_HWM = 0x800000;\nfunction roundUpToNextPowerOf2(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2\n    n--;\n    for (var p = 1; p < 32; p <<= 1) n |= n >> p;\n    n++;\n  }\n  return n;\n}\n\nfunction howMuchToRead(n, state) {\n  if (state.length === 0 && state.ended)\n    return 0;\n\n  if (state.objectMode)\n    return n === 0 ? 0 : 1;\n\n  if (isNaN(n) || util.isNull(n)) {\n    // only flow one buffer at a time\n    if (state.flowing && state.buffer.length)\n      return state.buffer[0].length;\n    else\n      return state.length;\n  }\n\n  if (n <= 0)\n    return 0;\n\n  // If we're asking for more than the target buffer level,\n  // then raise the water mark.  Bump up to the next highest\n  // power of 2, to prevent increasing it excessively in tiny\n  // amounts.\n  if (n > state.highWaterMark)\n    state.highWaterMark = roundUpToNextPowerOf2(n);\n\n  // don't have that much.  return null, unless we've ended.\n  if (n > state.length) {\n    if (!state.ended) {\n      state.needReadable = true;\n      return 0;\n    } else\n      return state.length;\n  }\n\n  return n;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function(n) {\n  debug('read', n);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (!util.isNumber(n) || n > 0)\n    state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 &&\n      state.needReadable &&\n      (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended)\n      endReadable(this);\n    else\n      emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0)\n      endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  }\n\n  if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0)\n      state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n  }\n\n  // If _read pushed data synchronously, then `reading` will be false,\n  // and we need to re-evaluate how much data we can return to the user.\n  if (doRead && !state.reading)\n    n = howMuchToRead(nOrig, state);\n\n  var ret;\n  if (n > 0)\n    ret = fromList(n, state);\n  else\n    ret = null;\n\n  if (util.isNull(ret)) {\n    state.needReadable = true;\n    n = 0;\n  }\n\n  state.length -= n;\n\n  // If we have nothing in the buffer, then we want to know\n  // as soon as we *do* get something into the buffer.\n  if (state.length === 0 && !state.ended)\n    state.needReadable = true;\n\n  // If we tried to read() past the EOF, then emit end on the next tick.\n  if (nOrig !== n && state.ended && state.length === 0)\n    endReadable(this);\n\n  if (!util.isNull(ret))\n    this.emit('data', ret);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!util.isBuffer(chunk) &&\n      !util.isString(chunk) &&\n      !util.isNullOrUndefined(chunk) &&\n      !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n\nfunction onEofChunk(stream, state) {\n  if (state.decoder && !state.ended) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync)\n      process.nextTick(function() {\n        emitReadable_(stream);\n      });\n    else\n      emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(function() {\n      maybeReadMore_(stream, state);\n    });\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended &&\n         state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n    else\n      len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function(n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function(dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n              dest !== process.stdout &&\n              dest !== process.stderr;\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted)\n    process.nextTick(endFn);\n  else\n    src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    debug('onunpipe');\n    if (readable === src) {\n      cleanup();\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n    src.removeListener('data', ondata);\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain &&\n        (!dest._writableState || dest._writableState.needDrain))\n      ondrain();\n  }\n\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    if (false === ret) {\n      debug('false write response, pause',\n            src._readableState.awaitDrain);\n      src._readableState.awaitDrain++;\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EE.listenerCount(dest, 'error') === 0)\n      dest.emit('error', er);\n  }\n  // This is a brutally ugly hack to make sure that our error handler\n  // is attached before any userland ones.  NEVER DO THIS.\n  if (!dest._events || !dest._events.error)\n    dest.on('error', onerror);\n  else if (isArray(dest._events.error))\n    dest._events.error.unshift(onerror);\n  else\n    dest._events.error = [onerror, dest._events.error];\n\n\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain)\n      state.awaitDrain--;\n    if (state.awaitDrain === 0 && EE.listenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\n\nReadable.prototype.unpipe = function(dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0)\n    return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes)\n      return this;\n\n    if (!dest)\n      dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest)\n      dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++)\n      dests[i].emit('unpipe', this);\n    return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1)\n    return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1)\n    state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function(ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  // If listening to data, and it has not explicitly been paused,\n  // then call resume to start the flow of data on the next tick.\n  if (ev === 'data' && false !== this._readableState.flowing) {\n    this.resume();\n  }\n\n  if (ev === 'readable' && this.readable) {\n    var state = this._readableState;\n    if (!state.readableListening) {\n      state.readableListening = true;\n      state.emittedReadable = false;\n      state.needReadable = true;\n      if (!state.reading) {\n        var self = this;\n        process.nextTick(function() {\n          debug('readable nexttick read 0');\n          self.read(0);\n        });\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function() {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    if (!state.reading) {\n      debug('resume read 0');\n      this.read(0);\n    }\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(function() {\n      resume_(stream, state);\n    });\n  }\n}\n\nfunction resume_(stream, state) {\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading)\n    stream.read(0);\n}\n\nReadable.prototype.pause = function() {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  if (state.flowing) {\n    do {\n      var chunk = stream.read();\n    } while (null !== chunk && state.flowing);\n  }\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function(stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function() {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length)\n        self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function(chunk) {\n    debug('wrapped data');\n    if (state.decoder)\n      chunk = state.decoder.write(chunk);\n    if (!chunk || !state.objectMode && !chunk.length)\n      return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (util.isFunction(stream[i]) && util.isUndefined(this[i])) {\n      this[i] = function(method) { return function() {\n        return stream[method].apply(stream, arguments);\n      }}(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function(ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function(n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\nfunction fromList(n, state) {\n  var list = state.buffer;\n  var length = state.length;\n  var stringMode = !!state.decoder;\n  var objectMode = !!state.objectMode;\n  var ret;\n\n  // nothing in the list, definitely empty.\n  if (list.length === 0)\n    return null;\n\n  if (length === 0)\n    ret = null;\n  else if (objectMode)\n    ret = list.shift();\n  else if (!n || n >= length) {\n    // read it all, truncate the array.\n    if (stringMode)\n      ret = list.join('');\n    else\n      ret = Buffer.concat(list, length);\n    list.length = 0;\n  } else {\n    // read just some of it.\n    if (n < list[0].length) {\n      // just take a part of the first list item.\n      // slice is the same for buffers and strings.\n      var buf = list[0];\n      ret = buf.slice(0, n);\n      list[0] = buf.slice(n);\n    } else if (n === list[0].length) {\n      // first list is a perfect match\n      ret = list.shift();\n    } else {\n      // complex case.\n      // we have enough to cover it, but it spans past the first buffer.\n      if (stringMode)\n        ret = '';\n      else\n        ret = new Buffer(n);\n\n      var c = 0;\n      for (var i = 0, l = list.length; i < l && c < n; i++) {\n        var buf = list[0];\n        var cpy = Math.min(n - c, buf.length);\n\n        if (stringMode)\n          ret += buf.slice(0, cpy);\n        else\n          buf.copy(ret, c, 0, cpy);\n\n        if (cpy < buf.length)\n          list[0] = buf.slice(cpy);\n        else\n          list.shift();\n\n        c += cpy;\n      }\n    }\n  }\n\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0)\n    throw new Error('endReadable called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(function() {\n      // Check that we didn't get one last unshift.\n      if (!state.endEmitted && state.length === 0) {\n        state.endEmitted = true;\n        stream.readable = false;\n        stream.emit('end');\n      }\n    });\n  }\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf (xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crowdprocess/~/readable-stream/lib/_stream_readable.js\n ** module id = 33\n ** module chunks = 0\n **/","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crowdprocess/~/readable-stream/~/isarray/index.js\n ** module id = 34\n ** module chunks = 0\n **/","module.exports = require(\"buffer\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"buffer\"\n ** module id = 35\n ** module chunks = 0\n **/","module.exports = require(\"events\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"events\"\n ** module id = 36\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Buffer = require('buffer').Buffer;\n\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nvar StringDecoder = exports.StringDecoder = function(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crowdprocess/~/readable-stream/~/string_decoder/index.js\n ** module id = 37\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, cb), and it'll handle all\n// the drain event emission and buffering.\n\nmodule.exports = Writable;\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Stream = require('stream');\n\nutil.inherits(Writable, Stream);\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n}\n\nfunction WritableState(options, stream) {\n  var Duplex = require('./_stream_duplex');\n\n  options = options || {};\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var defaultHwm = options.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex)\n    this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function(er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.buffer = [];\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n}\n\nfunction Writable(options) {\n  var Duplex = require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex))\n    return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function() {\n  this.emit('error', new Error('Cannot pipe. Not readable.'));\n};\n\n\nfunction writeAfterEnd(stream, state, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  process.nextTick(function() {\n    cb(er);\n  });\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  if (!util.isBuffer(chunk) &&\n      !util.isString(chunk) &&\n      !util.isNullOrUndefined(chunk) &&\n      !state.objectMode) {\n    var er = new TypeError('Invalid non-string/buffer chunk');\n    stream.emit('error', er);\n    process.nextTick(function() {\n      cb(er);\n    });\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function(chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (util.isFunction(encoding)) {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (util.isBuffer(chunk))\n    encoding = 'buffer';\n  else if (!encoding)\n    encoding = state.defaultEncoding;\n\n  if (!util.isFunction(cb))\n    cb = function() {};\n\n  if (state.ended)\n    writeAfterEnd(this, state, cb);\n  else if (validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function() {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function() {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing &&\n        !state.corked &&\n        !state.finished &&\n        !state.bufferProcessing &&\n        state.buffer.length)\n      clearBuffer(this, state);\n  }\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode &&\n      state.decodeStrings !== false &&\n      util.isString(chunk)) {\n    chunk = new Buffer(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n  if (util.isBuffer(chunk))\n    encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret)\n    state.needDrain = true;\n\n  if (state.writing || state.corked)\n    state.buffer.push(new WriteReq(chunk, encoding, cb));\n  else\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev)\n    stream._writev(chunk, state.onwrite);\n  else\n    stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  if (sync)\n    process.nextTick(function() {\n      state.pendingcb--;\n      cb(er);\n    });\n  else {\n    state.pendingcb--;\n    cb(er);\n  }\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er)\n    onwriteError(stream, state, sync, er, cb);\n  else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(stream, state);\n\n    if (!finished &&\n        !state.corked &&\n        !state.bufferProcessing &&\n        state.buffer.length) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(function() {\n        afterWrite(stream, state, finished, cb);\n      });\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished)\n    onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n\n  if (stream._writev && state.buffer.length > 1) {\n    // Fast case, write everything using _writev()\n    var cbs = [];\n    for (var c = 0; c < state.buffer.length; c++)\n      cbs.push(state.buffer[c].callback);\n\n    // count the one we are adding, as well.\n    // TODO(isaacs) clean this up\n    state.pendingcb++;\n    doWrite(stream, state, true, state.length, state.buffer, '', function(err) {\n      for (var i = 0; i < cbs.length; i++) {\n        state.pendingcb--;\n        cbs[i](err);\n      }\n    });\n\n    // Clear buffer\n    state.buffer = [];\n  } else {\n    // Slow case, write chunks one-by-one\n    for (var c = 0; c < state.buffer.length; c++) {\n      var entry = state.buffer[c];\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        c++;\n        break;\n      }\n    }\n\n    if (c < state.buffer.length)\n      state.buffer = state.buffer.slice(c);\n    else\n      state.buffer.length = 0;\n  }\n\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function(chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function(chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (util.isFunction(chunk)) {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (util.isFunction(encoding)) {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (!util.isNullOrUndefined(chunk))\n    this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished)\n    endWritable(this, state, cb);\n};\n\n\nfunction needFinish(stream, state) {\n  return (state.ending &&\n          state.length === 0 &&\n          !state.finished &&\n          !state.writing);\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished) {\n    state.prefinished = true;\n    stream.emit('prefinish');\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(stream, state);\n  if (need) {\n    if (state.pendingcb === 0) {\n      prefinish(stream, state);\n      state.finished = true;\n      stream.emit('finish');\n    } else\n      prefinish(stream, state);\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished)\n      process.nextTick(cb);\n    else\n      stream.once('finish', cb);\n  }\n  state.ended = true;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crowdprocess/~/readable-stream/lib/_stream_writable.js\n ** module id = 38\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\n\nfunction TransformState(options, stream) {\n  this.afterTransform = function(er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb)\n    return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (!util.isNullOrUndefined(data))\n    stream.push(data);\n\n  if (cb)\n    cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\n\n\nfunction Transform(options) {\n  if (!(this instanceof Transform))\n    return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = new TransformState(options, this);\n\n  // when the writable side finishes, then flush out anything remaining.\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  this.once('prefinish', function() {\n    if (util.isFunction(this._flush))\n      this._flush(function(er) {\n        done(stream, er);\n      });\n    else\n      done(stream);\n  });\n}\n\nTransform.prototype.push = function(chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function(chunk, encoding, cb) {\n  throw new Error('not implemented');\n};\n\nTransform.prototype._write = function(chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform ||\n        rs.needReadable ||\n        rs.length < rs.highWaterMark)\n      this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function(n) {\n  var ts = this._transformState;\n\n  if (!util.isNull(ts.writechunk) && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\n\nfunction done(stream, er) {\n  if (er)\n    return stream.emit('error', er);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var ts = stream._transformState;\n\n  if (ws.length)\n    throw new Error('calling transform done when ws.length != 0');\n\n  if (ts.transforming)\n    throw new Error('calling transform done when still transforming');\n\n  return stream.push(null);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crowdprocess/~/readable-stream/lib/_stream_transform.js\n ** module id = 39\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough))\n    return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function(chunk, encoding, cb) {\n  cb(null, chunk);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crowdprocess/~/readable-stream/lib/_stream_passthrough.js\n ** module id = 40\n ** module chunks = 0\n **/","module.exports = \"/**\\n * DecisionTree\\n * ============\\n *\\n *\\n */\\n\\n/**\\n * represents a single decision tree\\n */\\n'use strict';\\n\\nObject.defineProperty(exports, '__esModule', {\\n  value: true\\n});\\n\\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\\n\\nvar DecisionTree = (function () {\\n\\n  /**\\n   * [constructor description]\\n   *\\n   * @param  {[type]} serial [description]\\n   * @return {[type]}        [description]\\n   */\\n\\n  function DecisionTree() {\\n    var serial = arguments[0] === undefined ? {} : arguments[0];\\n\\n    _classCallCheck(this, DecisionTree);\\n\\n    if (typeof serial === 'string') {\\n      serial = JSON.parse(serial);\\n    }\\n    var _iteratorNormalCompletion = true;\\n    var _didIteratorError = false;\\n    var _iteratorError = undefined;\\n\\n    try {\\n      for (var _iterator = Object.keys(serial)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\\n        var key = _step.value;\\n\\n        this[key] = serial[key];\\n      }\\n    } catch (err) {\\n      _didIteratorError = true;\\n      _iteratorError = err;\\n    } finally {\\n      try {\\n        if (!_iteratorNormalCompletion && _iterator['return']) {\\n          _iterator['return']();\\n        }\\n      } finally {\\n        if (_didIteratorError) {\\n          throw _iteratorError;\\n        }\\n      }\\n    }\\n\\n    if (!this.trainFun) {\\n      this.trainFun = this.weakType === 0 ? decisionStumpTrain : decision2DStumpTrain;\\n    }\\n    if (!this.testFun) {\\n      this.testFun = this.weakType === 0 ? decisionStumpTest : decision2DStumpTest;\\n    }\\n  }\\n\\n  _createClass(DecisionTree, [{\\n    key: 'train',\\n\\n    /**\\n     * [train description]\\n     *\\n     * @param  {Array}   data    -\\n     * @param  {Array}   labels  -\\n     * @param  {Object]} options -\\n     */\\n    value: function train(data, labels) {\\n      var options = arguments[2] === undefined ? {} : arguments[2];\\n\\n      var maxDepth = options.maxDepth || 4;\\n      var weakType = options.type || 0;\\n\\n      var trainFun = options.trainFun || decision2DStumpTrain;\\n      var testFun = options.testFun || decision2DStumpTest;\\n\\n      if (weakType == 0) {\\n        trainFun = decisionStumpTrain;\\n        testFun = decisionStumpTest;\\n      }\\n      if (weakType == 1) {\\n        trainFun = decision2DStumpTrain;\\n        testFun = decision2DStumpTest;\\n      }\\n\\n      // initialize various helper variables\\n      var numInternals = Math.pow(2, maxDepth) - 1;\\n      var numNodes = Math.pow(2, maxDepth + 1) - 1;\\n      var ixs = new Array(numNodes); // 31 -> 2^5 -1\\n      // console.log(numNodes, maxDepth);\\n      // debugger\\n      for (var i = 1; i < ixs.length; i++) {\\n        ixs[i] = [];\\n      }\\n      ixs[0] = new Array(labels.length);\\n      for (var i = 0; i < labels.length; i++) {\\n        ixs[0][i] = i; // root node starts out with all nodes as relevant\\n      }\\n      var models = new Array(numInternals);\\n\\n      // train\\n      for (var n = 0; n < numInternals; n++) {\\n\\n        // few base cases\\n        var ixhere = ixs[n];\\n        if (ixhere.length == 0) {\\n          continue;\\n        }\\n        if (ixhere.length == 1) {\\n          ixs[n * 2 + 1] = [ixhere[0]];\\n          continue;\\n        } // arbitrary send it down left\\n\\n        // learn a weak model on relevant data for this node\\n        var model = trainFun(data, labels, ixhere);\\n\\n        models[n] = model; // back it up model\\n\\n        // split the data according to the learned model\\n        var ixleft = [];\\n        var ixright = [];\\n\\n        for (var i = 0; i < ixhere.length; i++) {\\n          var label = testFun(data[ixhere[i]], model);\\n          if (label === 1) {\\n            ixleft.push(ixhere[i]);\\n          } else {\\n            ixright.push(ixhere[i]);\\n          }\\n        }\\n        ixs[n * 2 + 1] = ixleft;\\n        ixs[n * 2 + 2] = ixright;\\n      }\\n\\n      // compute data distributions at the leafs\\n      var leafPositives = new Array(numNodes);\\n      var leafNegatives = new Array(numNodes);\\n      for (var n = numInternals; n < numNodes; n++) {\\n        var numones = 0;\\n        for (var i = 0; i < ixs[n].length; i++) {\\n          if (labels[ixs[n][i]] === 1) {\\n            numones += 1;\\n          }\\n        }\\n        leafPositives[n] = numones;\\n        leafNegatives[n] = ixs[n].length - numones;\\n      }\\n\\n      // back up important prediction variables for predicting later\\n      this.models = models;\\n      this.leafPositives = leafPositives;\\n      this.leafNegatives = leafNegatives;\\n      this.maxDepth = maxDepth;\\n      this.weakType = weakType;\\n      this.trainFun = trainFun;\\n      this.testFun = testFun;\\n    }\\n  }, {\\n    key: 'predictOne',\\n\\n    /**\\n     * [predictOne description]\\n     * returns probability that example inst is 1.\\n     *\\n     * @param  {Array}  inst -\\n     * @return {Number}\\n     */\\n    value: function predictOne(inst) {\\n      var n = 0;\\n      for (var i = 0; i < this.maxDepth; i++) {\\n        var dir = this.testFun(inst, this.models[n]);\\n        if (dir === 1) {\\n          n = n * 2 + 1; // descend left\\n        } else {\\n          n = n * 2 + 2; // descend right\\n        }\\n      }\\n      return (this.leafPositives[n] + 0.5) / (this.leafNegatives[n] + 1.0); // bayesian smoothing!\\n    }\\n  }]);\\n\\n  return DecisionTree;\\n})();\\n\\nexports['default'] = DecisionTree;\\n\\n/**\\n * [decisionStumpTrain description]\\n * returns model\\n *\\n * @param  {Array}  data    -\\n * @param  {Array}  labels  -\\n * @param  {Array}  ix      -\\n * @param  {Object} options -\\n * @return {Object}\\n */\\nfunction decisionStumpTrain(data, labels, ix) {\\n  var options = arguments[3] === undefined ? {} : arguments[3];\\n\\n  var numtries = options.numTries || 10;\\n\\n  // choose a dimension at random and pick a best split\\n  var ri = randi(0, data[0].length);\\n  var N = ix.length;\\n\\n  // evaluate class entropy of incoming data\\n  var H = entropy(labels, ix);\\n  var bestGain = 0;\\n  var bestThr = 0;\\n  for (var i = 0; i < numtries; i++) {\\n\\n    // pick a random splitting threshold\\n    var ix1 = ix[randi(0, N)];\\n    var ix2 = ix[randi(0, N)];\\n    while (ix2 == ix1) {\\n      ix2 = ix[randi(0, N)]; // enforce distinctness of ix2\\n    }\\n\\n    var a = Math.random();\\n    var thr = data[ix1][ri] * a + data[ix2][ri] * (1 - a);\\n\\n    // measure information gain we'd get from split with thr\\n    var l1 = 1,\\n        r1 = 1,\\n        lm1 = 1,\\n        rm1 = 1; //counts for Left and label 1, right and label 1, left and minus 1, right and minus 1\\n    for (var j = 0; j < ix.length; j++) {\\n      if (data[ix[j]][ri] < thr) {\\n        if (labels[ix[j]] == 1) {\\n          l1++;\\n        } else {\\n          lm1++;\\n        }\\n      } else {\\n        if (labels[ix[j]] == 1) {\\n          r1++;\\n        } else {\\n          rm1++;\\n        }\\n      }\\n    }\\n\\n    var t = l1 + lm1; // normalize the counts to obtain probability estimates\\n    l1 = l1 / t;\\n    lm1 = lm1 / t;\\n    t = r1 + rm1;\\n    r1 = r1 / t;\\n    rm1 = rm1 / t;\\n\\n    var LH = -l1 * Math.log(l1) - lm1 * Math.log(lm1); // left and right entropy\\n    var RH = -r1 * Math.log(r1) - rm1 * Math.log(rm1);\\n\\n    var informationGain = H - LH - RH;\\n    //console.log(\\\"Considering split %f, entropy %f -> %f, %f. Gain %f\\\", thr, H, LH, RH, informationGain);\\n    if (informationGain > bestGain || i === 0) {\\n      bestGain = informationGain;\\n      bestThr = thr;\\n    }\\n  }\\n\\n  return { // model\\n    ri: ri,\\n    thr: bestThr\\n  };\\n}\\n\\n/**\\n * [decisionStumpTest description]\\n * returns a decision for a single data instance\\n *\\n * @param  {Arrat}  inst  -\\n * @param  {Object} model -\\n * @return {Number}\\n */\\nfunction decisionStumpTest(inst, model) {\\n  if (!model) {\\n    // this is a leaf that never received any data...\\n    return 1;\\n  }\\n  return inst[model.ri] < model.thr ? 1 : -1;\\n}\\n\\n/**\\n * [decision2DStumpTrain description]\\n * returns model. Code duplication with decisionStumpTrain :(\\n *\\n * @param  {Array} data     -\\n * @param  {Array} labels   -\\n * @param  {Array} ix       -\\n * @param  {Object} options -\\n * @return {Object}         - model\\n */\\nfunction decision2DStumpTrain(data, labels, ix) {\\n  var options = arguments[3] === undefined ? {} : arguments[3];\\n\\n  var numtries = options.numTries || 10;\\n\\n  // choose a dimension at random and pick a best split\\n  var N = ix.length;\\n\\n  var ri1 = 0;\\n  var ri2 = 1;\\n\\n  if (data[0].length > 2) {\\n    // more than 2D data. Pick 2 random dimensions\\n    ri1 = randi(0, data[0].length);\\n    ri2 = randi(0, data[0].length);\\n    while (ri2 == ri1) {\\n      ri2 = randi(0, data[0].length); // must be distinct!\\n    }\\n  }\\n\\n  // evaluate class entropy of incoming data\\n  var H = entropy(labels, ix);\\n  var bestGain = 0;\\n  var bestw1, bestw2, bestthr;\\n  var dots = new Array(ix.length);\\n\\n  for (var i = 0; i < numtries; i++) {\\n\\n    // pick random line parameters\\n    var alpha = randf(0, 2 * Math.PI);\\n    var w1 = Math.cos(alpha);\\n    var w2 = Math.sin(alpha);\\n\\n    // project data on this line and get the dot products\\n    for (var j = 0; j < ix.length; j++) {\\n      dots[j] = w1 * data[ix[j]][ri1] + w2 * data[ix[j]][ri2];\\n    }\\n\\n    // we are in a tricky situation because data dot product distribution\\n    // can be skewed. So we don't want to select just randomly between\\n    // min and max. But we also don't want to sort as that is too expensive\\n    // let's pick two random points and make the threshold be somewhere between them.\\n    // for skewed datasets, the selected points will with relatively high likelihood\\n    // be in the high-desnity regions, so the thresholds will make sense\\n    var ix1 = ix[randi(0, N)];\\n    var ix2 = ix[randi(0, N)];\\n    while (ix2 == ix1) {\\n      ix2 = ix[randi(0, N)]; // enforce distinctness of ix2\\n    }\\n    var a = Math.random();\\n    var dotthr = dots[ix1] * a + dots[ix2] * (1 - a);\\n\\n    // measure information gain we'd get from split with thr\\n    var l1 = 1,\\n        r1 = 1,\\n        lm1 = 1,\\n        rm1 = 1; //counts for Left and label 1, right and label 1, left and minus 1, right and minus 1\\n    for (var j = 0; j < ix.length; j++) {\\n      if (dots[j] < dotthr) {\\n        if (labels[ix[j]] == 1) {\\n          l1++;\\n        } else {\\n          lm1++;\\n        }\\n      } else {\\n        if (labels[ix[j]] == 1) {\\n          r1++;\\n        } else {\\n          rm1++;\\n        }\\n      }\\n    }\\n    var t = l1 + lm1;\\n    l1 = l1 / t;\\n    lm1 = lm1 / t;\\n    t = r1 + rm1;\\n    r1 = r1 / t;\\n    rm1 = rm1 / t;\\n\\n    var LH = -l1 * Math.log(l1) - lm1 * Math.log(lm1); // left and right entropy\\n    var RH = -r1 * Math.log(r1) - rm1 * Math.log(rm1);\\n\\n    var informationGain = H - LH - RH;\\n    //console.log(\\\"Considering split %f, entropy %f -> %f, %f. Gain %f\\\", thr, H, LH, RH, informationGain);\\n    if (informationGain > bestGain || i === 0) {\\n      bestGain = informationGain;\\n      bestw1 = w1;\\n      bestw2 = w2;\\n      bestthr = dotthr;\\n    }\\n  }\\n\\n  return { // model\\n    w1: bestw1,\\n    w2: bestw2,\\n    dotthr: bestthr\\n  };\\n}\\n\\n/**\\n * [decision2DStumpTest description]\\n * returns label for a single data instance\\n *\\n * @param  {Array}  inst  -\\n * @param  {Object} model -\\n * @return {Number}\\n */\\nfunction decision2DStumpTest(inst, model) {\\n  if (!model) {\\n    // this is a leaf that never received any data...\\n    return 1;\\n  }\\n  return inst[0] * model.w1 + inst[1] * model.w2 < model.dotthr ? 1 : -1;\\n}\\n\\n/**\\n * [entropy description]\\n * Misc utility functions\\n *\\n * @param  {String} labels -\\n * @param  {Array}  ix     -\\n * @return {Number}\\n */\\nfunction entropy(labels, ix) {\\n  var N = ix.length;\\n  var p = 0;\\n  for (var i = 0; i < N; i++) {\\n    if (labels[ix[i]] == 1) {\\n      p += 1;\\n    }\\n  }\\n  p = (1 + p) / (N + 2); // let's be bayesian about this\\n  var q = (1 + N - p) / (N + 2);\\n  return -p * Math.log(p) - q * Math.log(q);\\n}\\n\\n/**\\n * [randf description]\\n * generate random floating point number between a and b\\n *\\n * @param  {Number} a -\\n * @param  {Number} b -\\n * @return {Number}\\n */\\nfunction randf(a, b) {\\n  return Math.random() * (b - a) + a;\\n}\\n\\n/**\\n * [randi description]\\n * generate random integer between a and b (b excluded)\\n *\\n * @param  {Number} a -\\n * @param  {Number} b -\\n * @return {Number}\\n */\\nfunction randi(a, b) {\\n  return Math.floor(Math.random() * (b - a) + a);\\n}\\nmodule.exports = exports['default'];\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/raw-loader!./src/DecisionTree.js\n ** module id = 41\n ** module chunks = 0\n **/"],"sourceRoot":""}